# enable true color when $TERM is screen-256color
set  -g default-terminal "screen-256color"
# set -ga terminal-overrides ',*256col*:Tc'

# ctrl+left/right arrow sequences
set -s user-keys[0] "\eb"
set -s user-keys[1] "\ef"

# Leader key from c-b to c-space (C is CTRL)
#unbind C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix

# Window splitting
bind '\' split-window -h -c "#{pane_current_path}" # i hate the shift key
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# use v to begin selection in copy mode
bind-key -T copy-mode-vi v send-keys -X begin-selection

# Status line theme
# Nord
# source-file ~/.tmux/nord-theme.tmuxline

# sugarterm
source-file ~/.tmux/sugarterm.tmuxline

# Material hybrid
# source-file ~/.tmux/hybrid-theme.tmuxline

# Disable automatic window naming
# set-option -g allow-rename off

# Ask for window name on new window
bind-key c command-prompt -p "window name:" "new-window -c \"#{pane_current_path}\"; rename-window '%%'"

# Send and join panes
# bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key s choose-tree -s
# bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"

# Change windows with shift+arrow left and right
bind -n S-Left  previous-window
bind -n S-Right next-window

# smart pane switching with awareness of vim splits
# https://thoughtbot.com/blog/seamlessly-navigate-vim-and-tmux-splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
# bind -n 'C-\' run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# Ctrl+arrows
bind -n C-Left run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-Down run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-Up run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-Right run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"

# Left/right arrow sequence fix
bind -n User0 run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n User1 run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"

# Copy to system clipboard with reattach-to-user-namespace wrapper
# if-shell 'test "$(uname -s)" = Darwin' 'source-file ~/.tmux/darwin.conf'
# if-shell '[[ $(uname -a) =~ "microsoft"  ]]' 'source-file ~/.tmux/ubuntu_wsl.conf'

#SHELL
set-option -g default-shell /usr/local/bin/fish

# trackpad scrolling
setw -g mouse on

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @continuum-restore 'on'
# use forked tmux-copycat until performance issues are fixed
# see: https://github.com/tmux-plugins/tmux-copycat/issues/129
set -g @plugin 'gpanders/tmux-copycat'
# set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'jbnicolai/tmux-fpp'
set -g @plugin 'sainnhe/tmux-fzf'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'

# open fzf menu with leader ctrl+f
TMUX_FZF_LAUNCH_KEY="f"

# focus events
set -g focus-events on

set -g status-left-length 85
set -g status-left ">>#[fg=colour140] #S"
set -g status-right ''
set -g status-justify centre

# status bar on top
set-option -g status-position bottom

run -b '~/.tmux/plugins/tpm/tpm'
